/*
Auto generated by shader_lib_gen.py
*/
#include <GL/glew.h>
#include "shaderlib.h"



void CSimpleSSAOShader::LocateUniforms(){
    this->LocateUniform("view_pos_map", this->view_pos_map);
    this->LocateUniform("projection", this->projection);
    this->LocateUniform("ssao_kernel", this->ssao_kernel);
}

void CSimpleSSAOShader::Load(){
    CShader::Load("./shader/screen/screen.vs", "./shader/screen/ssao.fs", "./shader/screen/screen.gs");
}

void CMergeShader::LocateUniforms(){
    this->LocateUniform("texture_ssao", this->texture_ssao);
    this->LocateUniform("texture_color", this->texture_color);
}

void CMergeShader::Load(){
    CShader::Load("./shader/screen/screen.vs", "./shader/screen/merge.fs", "./shader/screen/screen.gs");
}

void CBlockShader::LocateUniforms(){
    this->LocateUniform("MVP", this->MVP);
    this->LocateUniform("MV", this->MV);
}

void CBlockShader::Load(){
    CShader::Load("./shader/block/block.vs", "./shader/block/block.fs", "./shader/block/block.gs");
}

// global shader objects
namespace shaderlib {
    SimpleSSAOShader ssao_shader = nullptr;
    MergeShader merge_shader = nullptr;
    BlockShader block_shader = nullptr;
}

void shaderlib::loadshaders(){

    ssao_shader = SimpleSSAOShader(new CSimpleSSAOShader);
    ssao_shader -> Load();
    ssao_shader -> LocateUniforms();


    merge_shader = MergeShader(new CMergeShader);
    merge_shader -> Load();
    merge_shader -> LocateUniforms();


    block_shader = BlockShader(new CBlockShader);
    block_shader -> Load();
    block_shader -> LocateUniforms();

}
